---
title: "BDA Project"
format: html
editor: visual
---

```{r setup, include=FALSE}
#| label: imports
set.seed(550)
library(aaltobda)
library(bayesplot)
library(cmdstanr)
library(dplyr)
library(ggplot2)
library(ggdist) # for stat_dotsinterval
library(posterior)
if(!require(brms)){
    install.packages("brms")
    library(brms)
}

# Set more readable themes with bigger font for plotting packages.
ggplot2::theme_set(theme_minimal(base_size = 14))
bayesplot::bayesplot_theme_set(theme_minimal(base_size = 14))

# This registers CmdStan as the backend for compiling cmdstan-chunks.
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
register_knitr_engine(override = FALSE)
```

Read & clean the data

```{r}
data = read.csv("data/WLD_RTFP_country_2023-11-06.csv")
inflation_data = data[!is.na(data$Inflation),]
```

Priors

```{r}
priors_pooled <- c(
  set_prior("normal(0, 10)", class = "b"),
  set_prior("normal(0, 5)", class = "Intercept"),
  set_prior("gamma(2, 0.1)", class = "nu") # Correct prior for degrees of freedom in Student's t
)

priors_hierarchical <-  c(
  set_prior("normal(0, 10)", class = "b"),
  set_prior("normal(0, 5)", class = "Intercept"),
  set_prior("gamma(2, 0.1)", class = "nu"), # Correct prior for degrees of freedom in Student's t
  set_prior("lkj(2)", class = "cor") # LKJ prior for the correlation matrix of the group-level effects
)
```

Pooled model

```{r}
pooled_model <- brms::brm(
  # This specifies the formula
  Inflation ~ Close,
  # This specifies the dataset
  data = inflation_data,
  # This specifies the observation model family
  family = student,
  # This passes the priors specified above to brms
  #prior = priors_pooled,
  # This causes brms to cache the results
  file = "models/pooled"
)
pooled_model
```

Hierarchical model

```{r}
hierarchical_model <- brms::brm(
  # This specifies the formula
  Inflation ~ Close + (1 + Close | country),
  # This specifies the dataset
  data = inflation_data,
  # This specifies the observation model family
  family = student,
  # This passes the priors specified above to brms
  prior = priors_hierarchical,
  # This causes brms to cache the results
  file = "models/hierarchical"
)
hierarchical_model 
```

Convergence diagnostics

```{r}
summary(pooled_model)
summary(hierarchical_model)
```

Posterior predictive checks

```{r}
pp_check(pooled_model) + xlim(-50, 100)
pp_check(hierarchical_model) + xlim(-50, 100)
```

Sensitivity analysis

```{r}

# Stronger priors for the pooled model
priors_pooled_2 <- c(
  set_prior("normal(0, 2.5)", class = "b"),
  set_prior("normal(0, 1)", class = "Intercept"),
  set_prior("gamma(2, 0.1)", class = "nu") # Assuming degrees of freedom to allow some robustness to outliers
)

# Stronger priors for the hierarchical model
priors_hierarchical_2 <- c(
  set_prior("normal(0, 2.5)", class = "b"),
  set_prior("normal(0, 1)", class = "Intercept"),
  set_prior("gamma(2, 0.1)", class = "nu"),
  set_prior("lkj(2)", class = "cor"), # LKJ prior for the correlation matrix of the group-level effects
  set_prior("normal(0, 2.5)", class = "sd"), # Stronger prior for the standard deviation of group-level effects
  set_prior("normal(0, 1)", class = "sd", group = "country") # Strong prior for the random intercepts standard deviation for country
)


pooled_model_2 <- brms::brm(
  # This specifies the formula
  Inflation ~ Close,
  # This specifies the dataset
  data = inflation_data,
  # This specifies the observation model family
  family = student,
  # This passes the priors specified above to brms
  prior = priors_pooled_2,
  # This causes brms to cache the results
  file = "models/pooled_2"
)

hierarchical_model_2 <- brms::brm(
  # This specifies the formula
  Inflation ~ Close + (1 + Close | country),
  # This specifies the dataset
  data = inflation_data,
  # This specifies the observation model family
  family = student,
  # This passes the priors specified above to brms
  prior = priors_hierarchical_2,
  # This causes brms to cache the results
  file = "models/hierarchical_2"
)
```

```{r}
pooled_model_2
hierarchical_model_2
summary(pooled_model_2)
summary(hierarchical_model_2)
pp_check(pooled_model_2) + xlim(-50, 100)
pp_check(hierarchical_model_2) + xlim(-50, 100)
#pp_check(pooled_model, type="intervals_grouped", group="country")
#pp_check(hierarchical_model, type="intervals_grouped", group="country")
```

Model comparison (LOO-CV)

```{r}
loo_p <- loo(pooled_model)
loo_h <- loo(hierarchical_model)
loo_p2 <- loo(pooled_model_2)
loo_h2 <- loo(hierarchical_model_2)
loo_p
loo_h
loo_p2
loo_h2
loo_compare(loo_p, loo_h, loo_p2, loo_h2)
```
